---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const overview = await getCollection("overview", ({ slug }) => {
    return slug !== "introduction";
  });
  const visualTests = await getCollection("visualTests");
  const interactionTests = await getCollection("interactionTests");
  const playwright = await getCollection("playwright");
  const cypress = await getCollection("cypress");
  const configuration = await getCollection("configuration");
  const modes = await getCollection("modes");
  const snapshot = await getCollection("snapshot");
  const turbosnap = await getCollection("turbosnap");
  const collaborate = await getCollection("collaborate");
  const ci = await getCollection("ci");
  const account = await getCollection("account");
  const guides = await getCollection("guides");
  const troubleshooting = await getCollection("troubleshooting", ({ slug }) => {
    return slug !== "faq";
  });
  const notInNavigation = await getCollection("notInNavigation");
  const articles = [
    ...overview,
    ...visualTests,
    ...interactionTests,
    ...playwright,
    ...cypress,
    ...configuration,
    ...modes,
    ...snapshot,
    ...turbosnap,
    ...collaborate,
    ...ci,
    ...account,
    ...guides,
    ...troubleshooting,
    ...notInNavigation,
  ];

  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

interface Props {
  article: CollectionEntry<"overview">;
}

const { article } = Astro.props;
const { Content } = await article.render();
---

<Content />
