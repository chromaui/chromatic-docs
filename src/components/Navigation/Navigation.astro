---
import type { CollectionEntry } from "astro:content";
import Search from "../Search.astro";
import { Support } from "../Support";
import { SideNav } from "./SideNav";
import { Container } from "./styles";
import { DropdownNav } from "./DropdownNav";

interface Props {
  url?: string;
  navItems: {
    title: string;
    items: (
      | CollectionEntry<"getStarted">
      | CollectionEntry<"workflow">
      | CollectionEntry<"configuration">
      | CollectionEntry<"modes">
      | CollectionEntry<"snapshot">
      | CollectionEntry<"collaborate">
      | CollectionEntry<"plugins">
      | CollectionEntry<"ci">
      | CollectionEntry<"account">
    )[];
    defaultOpen?: boolean;
    timeline?: boolean;
  }[];
}

const { navItems, url } = Astro.props;

const navGroups = navItems
  ? navItems.map((group) => ({
      ...group,
      items: group.items
        .map((item) => ({
          ...item,
          label: item.data?.sidebar?.label || item.data.title,
          slug: item.data?.isHome ? "" : (item.slug as any),
          data: {
            ...item.data,
            sidebar: {
              label: item.data?.sidebar?.label || item.data.title,
              order: item.data?.sidebar?.order || 999,
              hide: item.data?.sidebar?.hide || false,
            },
          },
        }))
        .filter((item) => !item.data.sidebar.hide)
        .sort((p1, p2) =>
          p1.data.sidebar.order > p2.data.sidebar.order
            ? 1
            : p1.data.sidebar.order < p2.data.sidebar.order
            ? -1
            : 0,
        ),
    }))
  : [];
---

<Container>
  <Search />
  <DropdownNav client:only="react" groups={navGroups as any} url={url} />
  <SideNav client:load sidebarItems={navGroups} url={url} />
  <Support client:load />
</Container>
